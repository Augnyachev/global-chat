module.exports = {
    env: {
        browser: true,
        es2022: true,
        node: true,
        jest: true,
    },
    extends: [
        'plugin:react/recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:prettier/recommended',
        'prettier',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            modules: true,
            jsx: true,
        },
        sourceType: 'module',
    },
    plugins: ['react', '@typescript-eslint', 'eslint-plugin-import-helpers', 'react-hooks'],
    ignorePatterns: ['node_modules', 'static/build', 'build', 'dist', '.storybook'],
    overrides: [
        {
            files: ['*.ts', '*.tsx'],
            rules: {
                'no-undef': 'off',
            },
        },
        {
            files: ['packages/platform-apis/mocks/*.ts'],
            rules: {
                camelcase: 'off',
            },
        },
        {
            files: ['*.stories.tsx', '*.stories.ts'],
            rules: {
                'react/no-multi-comp': 'off',
            },
        },
        {
            files: ['*.test.ts'],
            rules: {
                camelcase: 'off',
                'max-nested-callbacks': 'off',
            },
        },
    ],
    rules: {
        'import-helpers/order-imports': [
            'error',
            {
                newlinesBetween: 'always',
                groups: [
                    'module',
                    '/^twitch-chat/',
                    '/^platform-components/',
                    '/^platform-apis/',
                    '/^common.components/',
                    'parent',
                    'sibling',
                    'index',
                ],
                alphabetize: { order: 'asc', ignoreCase: true },
            },
        ],
        'react/jsx-filename-extension': [
            'error',
            {
                extensions: ['.tsx'],
            },
        ],
        'react/jsx-closing-bracket-location': ['error', 'line-aligned'],
        'react/jsx-key': ['error', { warnOnDuplicates: true }],
        'react/jsx-sort-props': 'error',
        'react/jsx-boolean-value': 'error',
        'react/jsx-no-undef': 'error',
        'react/jsx-closing-tag-location': 'error',
        'react/jsx-props-no-multi-spaces': 'error',
        'react/jsx-no-leaked-render': 'error',
        'react/jsx-no-duplicate-props': 'error',
        'react/jsx-uses-react': 'error',
        'react/jsx-uses-vars': 'error',
        'react/jsx-indent': ['error', 4],
        'react/jsx-indent-props': ['error', 4],
        'react/jsx-wrap-multilines': 'error',
        'react/no-multi-comp': 'error',
        'react/no-did-mount-set-state': 'error',
        'react/no-did-update-set-state': 'error',
        'react/jsx-no-target-blank': 'off',
        'react/no-unknown-property': 'error',
        'react/no-children-prop': 'error',
        'react/no-deprecated': 'error',
        'react/self-closing-comp': 'error',
        'react/react-in-jsx-scope': 'error',
        'react/prop-types': 'error',
        'react/hook-use-state': 'error',
        'react/display-name': 'off',
        'react-hooks/rules-of-hooks': 'error',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/no-use-before-define': 'error',
        '@typescript-eslint/no-empty-interface': 'error',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/no-shadow': ['error'],
        '@typescript-eslint/ban-ts-ignore': 'off',
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/no-explicit-any': 'error',
        '@typescript-eslint/no-empty-function': [
            'error',
            {
                allow: ['arrowFunctions'],
            },
        ],
        '@typescript-eslint/no-unused-vars': [
            'error',
            {
                varsIgnorePattern: '^_',
                argsIgnorePattern: '^_',
                destructuredArrayIgnorePattern: '^_',
                caughtErrorsIgnorePattern: '^error',
            },
        ],
        'no-cond-assign': 'error',
        'no-control-regex': 'error',
        'no-debugger': 'error',
        'no-dupe-keys': 'error',
        'no-dupe-args': 'error',
        'no-empty': 'error',
        'no-empty-character-class': 'error',
        'no-extra-semi': 'error',
        'no-ex-assign': 'error',
        'no-func-assign': 'error',
        'no-inner-declarations': 'error',
        'no-invalid-regexp': 'error',
        'no-obj-calls': 'error',
        'no-regex-spaces': 'error',
        'no-unreachable': 'error',
        'no-unreachable-loop': 'error',
        'no-var': 'error',
        'no-multiple-empty-lines': ['error', { max: 1, maxEOF: 1 }],
        'no-unsafe-negation': 'error',
        'no-console': ['error', { allow: ['info', 'error'] }],
        'no-use-before-define': 'off',
        'no-shadow': 'off',
        'no-const-assign': 'error',
        'no-constant-condition': 'off',
        'no-plusplus': 'error',
        'no-caller': 'error',
        'no-alert': 'error',
        'no-div-regex': 'error',
        'no-else-return': 'error',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-fallthrough': 'error',
        'no-floating-decimal': 'error',
        'no-implied-eval': 'error',
        'no-labels': 'error',
        'no-iterator': 'error',
        'no-lone-blocks': 'error',
        'no-loop-func': 'error',
        'no-multi-str': 'error',
        'no-global-assign': 'error',
        'no-new': 'error',
        'no-new-func': 'error',
        'no-new-wrappers': 'error',
        'no-octal': 'error',
        'no-octal-escape': 'error',
        'no-proto': 'error',
        'no-return-assign': 'error',
        'no-sequences': 'error',
        'no-with': 'error',
        'no-undef': 'error',
        'no-undef-init': 'error',
        'no-unused-expressions': 'error',
        'no-warning-comments': 'off',
        'no-nested-ternary': 'error',
        'no-trailing-spaces': 'error',
        'no-ternary': 'off',
        'no-array-constructor': 'off',
        'no-underscore-dangle': 'off',
        'no-mixed-spaces-and-tabs': 'error',
        'use-isnan': 'error',
        'valid-typeof': 'error',
        'semi-spacing': 'error',
        'dot-notation': 'error',
        radix: 'error',
        yoda: 'error',
        'wrap-iife': 'error',
        eqeqeq: 'error',
        complexity: 'off',
        curly: 'error',
        'object-curly-spacing': [1, 'always'],
        'default-case': 'error',
        'comma-dangle': [
            'error',
            {
                arrays: 'always-multiline',
                exports: 'always-multiline',
                functions: 'never',
                imports: 'always-multiline',
                objects: 'always-multiline',
            },
        ],
        'max-params': [2, 4],
        'max-nested-callbacks': ['error', 3],
        'brace-style': 'error',
        camelcase: 'error',
        'new-parens': 'error',
        'max-len': [
            'error',
            {
                code: 100,
                tabWidth: 4,
                ignoreComments: true,
                ignoreUrls: true,
                ignoreTemplateLiterals: true,
                ignoreStrings: true,
                ignoreRegExpLiterals: true,
            },
        ],
    },
    settings: {
        react: {
            version: '18.0',
        },
    },
};
